"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Classes = module.parent.exports.Classes;
exports.command = new Classes.Command({
    name: "exit",
    desc: "Stop Panel CLI",
    exp: new RegExp('^' + Classes.Command.prefix + "((sto?p|e(xit)?)|pause( \\d+)?)$", "sim"),
    usage: eval("'" + Classes.Command.prefix + "'") + "((stop|exit)|pause[ time<Nummber>])",
    _compl: eval("'" + Classes.Command.prefix + "'") + "stop",
    _priority: 1,
    body: function body(panel, time) {
        panel.toggleCLI(false);
        if (time) {
            setTimeout(panel.toggleCLI, time, true);
        }
    },
    parse: function parse(line, panel) {
        let nline = line.split(' ');
        return this.body(panel, Number(nline[1]));
    } //parse
});
exports.default = exports.command;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhpdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21tYW5kcy9leGl0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQzs7QUFFYixNQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFFbkMsUUFBQSxPQUFPLEdBQUcsSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDO0lBQ3hDLElBQUksRUFBRSxNQUFNO0lBQ1osSUFBSSxFQUFFLGdCQUFnQjtJQUN0QixHQUFHLEVBQUUsSUFBSSxNQUFNLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLGtDQUFrQyxFQUFFLEtBQUssQ0FBQztJQUN6RixLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsR0FBRyxxQ0FBcUM7SUFDdkYsTUFBTSxFQUFFLElBQUksQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLEdBQUcsTUFBTTtJQUN6RCxTQUFTLEVBQUUsQ0FBQztJQUNaLElBQUksRUFBRSxTQUFTLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBYTtRQUN2QyxLQUFLLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRXZCLElBQUksSUFBSSxFQUFFO1lBQ1QsVUFBVSxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ3hDO0lBQ0YsQ0FBQztJQUNELEtBQUssRUFBRSxTQUFTLEtBQUssQ0FBQyxJQUFZLEVBQUUsS0FBSztRQUN4QyxJQUFJLEtBQUssR0FBYSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRXRDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDM0MsQ0FBQyxDQUFDLE9BQU87Q0FDVCxDQUFDLENBQUM7QUFFSCxrQkFBZSxlQUFPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbmNvbnN0IENsYXNzZXMgPSBtb2R1bGUucGFyZW50LmV4cG9ydHMuQ2xhc3NlcztcclxuXHJcbmV4cG9ydCB2YXIgY29tbWFuZCA9IG5ldyBDbGFzc2VzLkNvbW1hbmQoe1xyXG5cdG5hbWU6IFwiZXhpdFwiLFxyXG5cdGRlc2M6IFwiU3RvcCBQYW5lbCBDTElcIixcclxuXHRleHA6IG5ldyBSZWdFeHAoJ14nICsgQ2xhc3Nlcy5Db21tYW5kLnByZWZpeCArIFwiKChzdG8/cHxlKHhpdCk/KXxwYXVzZSggXFxcXGQrKT8pJFwiLCBcInNpbVwiKSxcclxuXHR1c2FnZTogZXZhbChcIidcIiArIENsYXNzZXMuQ29tbWFuZC5wcmVmaXggKyBcIidcIikgKyBcIigoc3RvcHxleGl0KXxwYXVzZVsgdGltZTxOdW1tYmVyPl0pXCIsXHJcblx0X2NvbXBsOiBldmFsKFwiJ1wiICsgQ2xhc3Nlcy5Db21tYW5kLnByZWZpeCArIFwiJ1wiKSArIFwic3RvcFwiLFxyXG5cdF9wcmlvcml0eTogMSxcclxuXHRib2R5OiBmdW5jdGlvbiBib2R5KHBhbmVsLCB0aW1lPzogbnVtYmVyKSB7XHJcblx0XHRwYW5lbC50b2dnbGVDTEkoZmFsc2UpO1xyXG5cdFx0XHJcblx0XHRpZiAodGltZSkge1xyXG5cdFx0XHRzZXRUaW1lb3V0KHBhbmVsLnRvZ2dsZUNMSSwgdGltZSwgdHJ1ZSk7XHJcblx0XHR9XHJcblx0fSwgLy9ib2R5XHJcblx0cGFyc2U6IGZ1bmN0aW9uIHBhcnNlKGxpbmU6IHN0cmluZywgcGFuZWwpIHtcclxuXHRcdGxldCBubGluZTogc3RyaW5nW10gPSBsaW5lLnNwbGl0KCcgJyk7XHJcblxyXG5cdFx0cmV0dXJuIHRoaXMuYm9keShwYW5lbCwgTnVtYmVyKG5saW5lWzFdKSk7XHJcblx0fSAvL3BhcnNlXHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29tbWFuZDtcclxuIl19